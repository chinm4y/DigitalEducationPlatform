/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.Admin;

import Business.Profiles.Profile;
import Business.Utils.Utilities;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author chinm
 */
public class AdminJPanel extends javax.swing.JPanel {

    /**
     * Creates new form AdminJPanel
     */
 
    private JPanel workArea;
    private Utilities utils;
    public AdminJPanel(JPanel workArea, Utilities utils) {
//        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        initComponents();
        this.workArea = workArea;
        this.utils = utils;
        populateUsersTable();
    }
     
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        UsersJTable = new javax.swing.JTable();
        btnViewUsers = new javax.swing.JButton();
        btnEnable = new javax.swing.JButton();
        btnProfessorAnalytics = new javax.swing.JButton();
        btnStudentAnalytics = new javax.swing.JButton();
        logoutBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 0, 0));

        UsersJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Username", "Name", "Email", "Role", "Enabled?"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(UsersJTable);

        btnViewUsers.setBackground(new java.awt.Color(51, 255, 255));
        btnViewUsers.setText("View User");
        btnViewUsers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewUsersActionPerformed(evt);
            }
        });

        btnEnable.setBackground(new java.awt.Color(51, 255, 255));
        btnEnable.setText("Enable");
        btnEnable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnableActionPerformed(evt);
            }
        });

        btnProfessorAnalytics.setBackground(new java.awt.Color(51, 255, 255));
        btnProfessorAnalytics.setText("Professor Analytics");
        btnProfessorAnalytics.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProfessorAnalyticsActionPerformed(evt);
            }
        });

        btnStudentAnalytics.setBackground(new java.awt.Color(51, 255, 255));
        btnStudentAnalytics.setText("Student Analytics");
        btnStudentAnalytics.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStudentAnalyticsActionPerformed(evt);
            }
        });

        logoutBtn.setBackground(new java.awt.Color(51, 255, 255));
        logoutBtn.setText("Logout");
        logoutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(114, 114, 114)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(logoutBtn)
                    .addComponent(btnProfessorAnalytics)
                    .addComponent(btnStudentAnalytics, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnViewUsers, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEnable)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 517, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(126, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnEnable)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnViewUsers)
                .addGap(18, 18, 18)
                .addComponent(btnStudentAnalytics)
                .addGap(18, 18, 18)
                .addComponent(btnProfessorAnalytics)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(logoutBtn)
                .addContainerGap(80, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnProfessorAnalyticsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProfessorAnalyticsActionPerformed
        // TODO add your handling code here:
        PanalyticsJPanel panalyticsPanel = new PanalyticsJPanel(workArea,utils);
        workArea.add("Panalytics",panalyticsPanel);
        CardLayout layout = (CardLayout) workArea.getLayout();
        layout.next(workArea);
    }//GEN-LAST:event_btnProfessorAnalyticsActionPerformed

    private void btnStudentAnalyticsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStudentAnalyticsActionPerformed
SanalyticsJPanel sanalyticsPanel = new SanalyticsJPanel(workArea,utils);
        workArea.add("Sanalytics",sanalyticsPanel);
        CardLayout layout = (CardLayout) workArea.getLayout();
        layout.next(workArea);        // TODO add your handling code here:
    }//GEN-LAST:event_btnStudentAnalyticsActionPerformed

    private void btnViewUsersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewUsersActionPerformed

        int selectedRowIndex = UsersJTable.getSelectedRow();
       if(selectedRowIndex<0){
           
           JOptionPane.showMessageDialog(this, "Please select a row to View");
           return;
       } 
       else {
    
        Profile profile = (Profile)UsersJTable.getValueAt(selectedRowIndex, 0);
        ViewUsersJPanel viewPanel = new ViewUsersJPanel(workArea,utils,profile);
            workArea.add("viewusers",viewPanel);
            CardLayout layout = (CardLayout) workArea.getLayout();
            layout.next(workArea);
        }
    }//GEN-LAST:event_btnViewUsersActionPerformed

    private void btnEnableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnableActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = UsersJTable.getSelectedRow();
       if(selectedRowIndex<0){
           
           JOptionPane.showMessageDialog(this, "Please select a row to View");
           return;
       } 
       else {
    
        Profile profile = (Profile)UsersJTable.getValueAt(selectedRowIndex, 0);
        System.out.println(profile.IsEnabled());
        profile.setIsEnabled(true);
        populateUsersTable();
        }
        
    }//GEN-LAST:event_btnEnableActionPerformed

    private void logoutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutBtnActionPerformed
        // TODO add your handling code here:
        utils.doLogout();
        workArea.remove(this);
        CardLayout layout = (CardLayout) workArea.getLayout();
        layout.previous(workArea);
    }//GEN-LAST:event_logoutBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable UsersJTable;
    private javax.swing.JButton btnEnable;
    private javax.swing.JButton btnProfessorAnalytics;
    private javax.swing.JButton btnStudentAnalytics;
    private javax.swing.JButton btnViewUsers;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton logoutBtn;
    // End of variables declaration//GEN-END:variables

    private void populateUsersTable() {
        DefaultTableModel dtm = (DefaultTableModel) UsersJTable.getModel();
        dtm.setRowCount(0);     
       
        ArrayList<Profile> pf = utils.getProfiles();
          
          for(Business.Profiles.Profile profile : pf){
              Object[] row = new Object[5];
              row[0] = profile;
              row[1] = profile.getName();
              row[2] = profile.getEmail();
              row[3] = profile.getType().toString().toLowerCase();
              row[4] = (profile.IsEnabled())? "Yes" : "No";
              
              
              dtm.addRow(row);
          }
   
       
        
        
//   throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
