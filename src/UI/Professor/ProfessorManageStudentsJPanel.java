/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.Professor;

import Business.Profiles.StudentProfile;
import Business.Courses.CourseOffering;
import Business.Utils.Utilities;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ameysatwe
 */
public class ProfessorManageStudentsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ProfessorManageStudentsJPanel
     */
    public ProfessorManageStudentsJPanel() {
        initComponents();
    }
    private Utilities utils;
    ArrayList<StudentProfile> students;
    private JPanel workArea;
    ProfessorManageStudentsJPanel(JPanel workArea, Utilities utils) {
//        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        initComponents();
        this.utils = utils;
        this.workArea = workArea;
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblStudents = new javax.swing.JTable();
        updateGradesBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        profManageStudsCourseID = new javax.swing.JTextField();
        getStudentsBtn = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 0, 0));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Manage Students/ Grade Students");

        tblStudents.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Course Name", "Student Name", "Grade", "Semester"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblStudents);

        updateGradesBtn.setBackground(new java.awt.Color(51, 255, 255));
        updateGradesBtn.setText("Update");
        updateGradesBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateGradesBtnActionPerformed(evt);
            }
        });

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Course ID :");

        getStudentsBtn.setBackground(new java.awt.Color(51, 255, 255));
        getStudentsBtn.setText("Get Students");
        getStudentsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getStudentsBtnActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(51, 255, 255));
        jButton3.setText("Back");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(364, 364, 364)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(399, 399, 399)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(profManageStudsCourseID, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(getStudentsBtn)))
                .addContainerGap(305, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(updateGradesBtn)
                .addGap(501, 501, 501))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(getStudentsBtn)
                    .addComponent(jLabel2)
                    .addComponent(profManageStudsCourseID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(updateGradesBtn)
                .addContainerGap(208, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void getStudentsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getStudentsBtnActionPerformed
        // TODO add your handling code here:
        String courseID = profManageStudsCourseID.getText();
        
        
        
        populateTable(courseID);
    }//GEN-LAST:event_getStudentsBtnActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        workArea.remove(this);
        CardLayout layout = (CardLayout)workArea.getLayout();
        layout.previous(workArea);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void updateGradesBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateGradesBtnActionPerformed
        // TODO add your handling code here:
       int selectedRowIndex = tblStudents.getSelectedRow();
       if(selectedRowIndex<0){
           JOptionPane.showMessageDialog(this, "Please select a row to View");
           return;
       } 
       else {
    
        StudentProfile student = students.get(selectedRowIndex);
        student.AssignGrade(profManageStudsCourseID.getText(), (Integer)tblStudents.getValueAt(selectedRowIndex, 2));
        System.out.println(student.getGrade(profManageStudsCourseID.getText()));
        populateTable(profManageStudsCourseID.getText());
       }
        
                
                
    }//GEN-LAST:event_updateGradesBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton getStudentsBtn;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField profManageStudsCourseID;
    private javax.swing.JTable tblStudents;
    private javax.swing.JButton updateGradesBtn;
    // End of variables declaration//GEN-END:variables

    private void populateTable(String courseID) {
//        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
          DefaultTableModel dtm = (DefaultTableModel) tblStudents.getModel();
          dtm.setRowCount(0);
          
           students = utils.getStudents(courseID,utils.getCurrentProfessor());
          if(students != null){
              for(var x : students){
                  Object[] row = new Object[4];
                  row[0] = utils.getCourseNameByCourseID(courseID);
                  row[1] = x.getName();
                  row[2] = x.getGrade(courseID);
//                  row[3] = utils.getSemester(courseID);
                  row[3] = x.getCourses().get(0).getSemester();
                  dtm.addRow(row);
              }
          }
          
//          for(CourseOffering c : co){
//              Object[] row = new Object[4];
//              row[0] = c.getCourse();
//              
//          }

    }
}
