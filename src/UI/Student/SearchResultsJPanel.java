/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.Student;

import Business.Courses.Course;
import Business.Courses.CourseOffering;
import Business.Utils.Utilities;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author chinm
 */
public class SearchResultsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form SearchResultsJPanel
     */
    public SearchResultsJPanel() {
        initComponents();
    }
    private JPanel workArea;
    private Utilities utils;
    private ArrayList<CourseOffering> courses;

    SearchResultsJPanel(JPanel workArea, Utilities utils, ArrayList<CourseOffering> courses) {
//        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        initComponents();
        this.workArea = workArea;
        this.utils = utils;
        this.courses = courses;
        
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnManageCourse = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        CoursesJTable = new javax.swing.JTable();
        viewCoursesBtn = new javax.swing.JButton();
        registerCoursesBtn = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        btnManageCourse.setText("Manage Courses");
        btnManageCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManageCourseActionPerformed(evt);
            }
        });

        setBackground(new java.awt.Color(0, 0, 0));

        CoursesJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Course Title", "Course ID", "Course Credits", "Professor", "Semester", "Timing", "Class Size", "Reputation Index"
            }
        ));
        jScrollPane1.setViewportView(CoursesJTable);

        viewCoursesBtn.setBackground(new java.awt.Color(51, 255, 255));
        viewCoursesBtn.setText("View");
        viewCoursesBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewCoursesBtnActionPerformed(evt);
            }
        });

        registerCoursesBtn.setBackground(new java.awt.Color(51, 255, 255));
        registerCoursesBtn.setText("Register");
        registerCoursesBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerCoursesBtnActionPerformed(evt);
            }
        });

        backButton.setBackground(new java.awt.Color(51, 255, 255));
        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Search Results");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(207, 207, 207))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(123, 123, 123)
                        .addComponent(viewCoursesBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(200, 200, 200)
                        .addComponent(registerCoursesBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(backButton)))
                .addGap(127, 482, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(backButton)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(viewCoursesBtn)
                    .addComponent(registerCoursesBtn))
                .addContainerGap(676, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnManageCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManageCourseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnManageCourseActionPerformed

    private void viewCoursesBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewCoursesBtnActionPerformed
        // TODO add your handling code here:
        
                int selectedRow = CoursesJTable.getSelectedRow();
        if(selectedRow<0){
            JOptionPane.showMessageDialog(this,"Please select row first.","Warning",JOptionPane.WARNING_MESSAGE);
        }
        else{
//            Account acc = (Account) tblAccounts.getValueAt(selectedRow, 0);
//            ViewAccountDetailsJPanel panel = new ViewAccountDetailsJPanel(userProcessContainer,acc);
//            userProcessContainer.add("ViewAccountDetailsJPanel",panel);
//        
//            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
//            layout.next(userProcessContainer);
              CourseOffering co = (CourseOffering)CoursesJTable.getValueAt(selectedRow,0);
              StudentViewCourseJPanel viewCourseJPanel = new StudentViewCourseJPanel(workArea,utils,co);
              workArea.add("ViewCoursePanel",viewCourseJPanel);
              
              
              CardLayout layout = (CardLayout) workArea.getLayout();
              layout.next(workArea);
                
        }
        
    }//GEN-LAST:event_viewCoursesBtnActionPerformed

    private void registerCoursesBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerCoursesBtnActionPerformed
        // TODO add your handling code here:
                        int selectedRow = CoursesJTable.getSelectedRow();
        if(selectedRow<0){
            JOptionPane.showMessageDialog(this,"Please select row first.","Warning",JOptionPane.WARNING_MESSAGE);
        }
        else{
//            Account acc = (Account) tblAccounts.getValueAt(selectedRow, 0);
//            ViewAccountDetailsJPanel panel = new ViewAccountDetailsJPanel(userProcessContainer,acc);
//            userProcessContainer.add("ViewAccountDetailsJPanel",panel);
//        
//            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
//            layout.next(userProcessContainer);
              CourseOffering co = (CourseOffering)CoursesJTable.getValueAt(selectedRow,0);
              if(co.getClassSize()>0){
              co.addStudentToCourse(utils.getCurrentStudent());  
              JOptionPane.showMessageDialog(this, "Course registered successfully");
              populateTable();
              }
              else{
                  JOptionPane.showMessageDialog(this, "Course is full. Please try when new courses are released");
              }
        }
    }//GEN-LAST:event_registerCoursesBtnActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        workArea.remove(this);
        CardLayout layout = (CardLayout) workArea.getLayout();
        layout.previous(workArea);
        
    }//GEN-LAST:event_backButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable CoursesJTable;
    private javax.swing.JButton backButton;
    private javax.swing.JButton btnManageCourse;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton registerCoursesBtn;
    private javax.swing.JButton viewCoursesBtn;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
//        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        DefaultTableModel dtm = (DefaultTableModel) CoursesJTable.getModel();
        dtm.setRowCount(0);
        
        for(var x:courses){
            Object[] row = new Object[8];
            row[0] = x;
            row[1] = x.getCourse().getCourseID();
            row[2] = x.getCourse().getCourseCredits();
            row[3] = x.getProfessor().getName();
            row[4] = x.getSemester();
            row[5] = x.getTiming();
            row[6] = x.getClassSize();
            row[7] = x.getProfessor().getReputationIndex();
            dtm.addRow(row);
        }
    }
}
